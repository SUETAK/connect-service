package main

import (
	"context"
	"fmt"
	"github.com/rs/cors"
	"log"
	"net/http"

	"github.com/bufbuild/connect-go"
	"golang.org/x/net/http2"
	"golang.org/x/net/http2/h2c"

	elizav1 "example/gen/eliza/v1"        // generated by protoc-gen-go
	"example/gen/eliza/v1/elizav1connect" // generated by protoc-gen-connect-go
)

type ElizaServer struct{}

func (s *ElizaServer) Say(
	ctx context.Context,
	req *connect.Request[elizav1.SayRequest],
) (*connect.Response[elizav1.SayResponse], error) {
	log.Println("Request headers: ", req.Header())
	res := connect.NewResponse(&elizav1.SayResponse{
		Sentence: fmt.Sprintf("Hello, %s!", req.Msg.Sentence),
	})
	res.Header().Set("Greet-Version", "v1")
	return res, nil
}

func main() {
	eliza := &ElizaServer{}
	mux := http.NewServeMux()
	path, handler := elizav1connect.NewElizaServiceHandler(eliza)
	mux.Handle(path, handler)

	corsHandler := cors.AllowAll().Handler(h2c.NewHandler(mux, &http2.Server{}))
	http.ListenAndServe(
		"localhost:8080",
		corsHandler,
	)
}
